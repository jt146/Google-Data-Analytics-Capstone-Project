{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.0.5"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":7746251,"sourceType":"datasetVersion","datasetId":1041311}],"dockerImageVersionId":30618,"isInternetEnabled":false,"language":"r","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/jeannetran111/google-capstone-project-bellabeat-case-study?scriptVersionId=165363266\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"<img src=https://miro.medium.com/v2/resize:fit:1400/1*SjEGKrjDp7skk4URhzW5Nw.png width=\"900px\" height=\"900px\">","metadata":{}},{"cell_type":"markdown","source":"# **Google Capstone Project - Bellabeat Case Study**\n### About the Project\nThis is an optional capstone project that is part of the Google Data Analytics Professional Certificate program. The project involves a case study that allows us to apply the skills we have learned from the courses in the certificate program. Our task here is to analyze the datasets for Bellabeat and answer key business questions. This project will be organized into six steps of the data analysis process: ask, prepare, process, analyze, share, and act.","metadata":{"_uuid":"5dc24318-3d38-40c6-9d9c-987d1569b047","_cell_guid":"8bc0bd25-543d-460a-b2b7-60b75603e632","trusted":true}},{"cell_type":"markdown","source":"### Introduction\nBellabeat is a high-tech company that manufactures health-focused smart products for women. Bellabeat designs wearable products and mobile apps that collect data so that users can monitor their well-beings based on their activities. Due to the company's potential for growth in the global smart device market, Urska Srsen, founder and Chief Creative Officer of Bellabeat, has tasked the data analytics team to analyze the usage data of a non-Bellabeat device in order to gain insight into how consumers use the non-Bellabeat smart devices. Then, using these insights, Srsen has asked us for high-level recommendations on how these trends can influence the Bellabeat marketing strategy.","metadata":{"_uuid":"46999965-f609-4b84-9a88-181c77751cfe","_cell_guid":"ded9a451-26e6-49af-9911-6dcf9c50f789","trusted":true}},{"cell_type":"markdown","source":"# The Data Analysis Process","metadata":{"_uuid":"3201640b-886a-4f92-9116-cf64f4897bcc","_cell_guid":"c0f5ca59-e9c6-411e-829b-1f7b9fa08262","trusted":true}},{"cell_type":"markdown","source":"## **1. Ask**\n### Stakeholders \n**Urska Srsen** - Founder and Chief Creative Officer of Bellabeat   \n**Sando Mur** - Cofounder of Bellabeat and mathematician; key member of the Bellabeat executive team   \n**Bellabeat marketing analytics team** - a team of data anaylsts responsible for collecting, analyzing, and reporting data that helps guide Bellabeat's marketing strategy  \n### Business Task\nThe goal of this project is to determine the trends in the smart device usage and understand how those trends can influence the marketing strategy of the company. We can accomplish this by using the consumer tracker data to analyze the trends of the usage data from a non-Bellabeat smart device, and then use the insights from the data to determine how they could apply to the Bellabeat customers and how we can develop the marketing strategy based on those insights.  \nWe will ask ourselves these three questions to guide us throughout the project:\n1. What are some trends in the smart device usage?\n2. How could these trends apply to Bellabeat customers?\n3. How could these trends help influence the Bellabeat marketing strategy?","metadata":{"_uuid":"56a9688e-d00a-415f-86f9-091921543882","_cell_guid":"ab0e5d10-2d96-4d2e-8254-782e771ff762","trusted":true}},{"cell_type":"markdown","source":"## **2. Prepare**\n### Data\n[FitBit Fitness Tracker Data][1] - Kaggle dataset that contains personal fitness tracker data from thirty Fitbit users who had consented to the submission of their personal tracker data. The data was exported from the users' own devices. Srsen suggested using this data set to explore the daily habits of the smart device users.\n* The data was retrieved from public domain and was made available on Kaggle via the user named Mobius.\n* The original source of the dataset is [Zenodo.org][2]. The dataset was said to be generated by respondents to the survey via Amazon Mechanical Turk.\n* Mobius claimed the data was collected from 3/12/2016 to 5/12/2016. However, the dataset they provided only showed data from 4/12/2016 to 5/12/2016. This already proved that there is inconsistency with the data and thus compromises the integrity of the data. While the missing data from 3/12 to 4/12 can be retrieved from the original source Zenodo.org, we will use the dataset simply as is from Kaggle from 4/12 to 5/12.\n* We have determined that a sample size of thirty users is too small to determine the trends of the general population that wear the smart devices. Furthermore, since Bellabeat's products are designed for women, there is no way to determine if the users in the dataset were all women or not. \n* Due to the issues mentioned above, this project will be completed with limitations that the sample size would be too small, that there were likely not all women in the sample group, and without the data from 4/12/2016 to 5/12/2016.\n* Since we are only interested in learning how the consumers used their smart devices, we will not clean and analyze all the files in the dataset. \n\n[1]: https://www.kaggle.com/datasets/arashnic/fitbit/data\n[2]: https://zenodo.org/records/53894#.X9oeh3Uzaao","metadata":{"_uuid":"266491da-dee7-40b8-abdc-c7093ad3d34a","_cell_guid":"6b8fe5a4-2271-4e35-ab67-f963ada8df49","trusted":true}},{"cell_type":"markdown","source":"## **3. Process**\n### Tools Used\nFor this project, I will use R to process the data, clean the data, and create the visualizations. \n### Data Cleaning Process\nBefore I start the data cleaning process, I will need to first load the R packages that are necessary for data cleaning and manipulation as well as import the files in the dataset.","metadata":{"_uuid":"2f9e1797-da56-442b-9e34-8fdd691a2b6f","_cell_guid":"b19e9ddf-7a86-4aaa-ba48-da5e1d1bce3c","trusted":true}},{"cell_type":"code","source":"# Load the R packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(janitor)\nlibrary(dplyr)\n     ","metadata":{"_uuid":"33437f26-3526-448d-b571-7453c3840bb3","_cell_guid":"7f977a79-26c0-4034-827f-51f4589a84af","execution":{"iopub.status.busy":"2024-03-04T08:30:28.576076Z","iopub.execute_input":"2024-03-04T08:30:28.579306Z","iopub.status.idle":"2024-03-04T08:30:30.017771Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Import the files\n\ndailyActivity <- read.csv(\"/kaggle/input/fitbit/mturkfitbit_export_4.12.16-5.12.16/Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv\")\ndailyCalories <- read.csv(\"/kaggle/input/fitbit/mturkfitbit_export_4.12.16-5.12.16/Fitabase Data 4.12.16-5.12.16/dailyCalories_merged.csv\")\ndailyIntensities <- read.csv(\"/kaggle/input/fitbit/mturkfitbit_export_4.12.16-5.12.16/Fitabase Data 4.12.16-5.12.16/dailyIntensities_merged.csv\")\nhourlyIntensities <- read.csv(\"/kaggle/input/fitbit/mturkfitbit_export_4.12.16-5.12.16/Fitabase Data 4.12.16-5.12.16/hourlyIntensities_merged.csv\")\ndailySteps <- read.csv(\"/kaggle/input/fitbit/mturkfitbit_export_4.12.16-5.12.16/Fitabase Data 4.12.16-5.12.16/dailySteps_merged.csv\")\ndaySleep <- read.csv(\"/kaggle/input/fitbit/mturkfitbit_export_4.12.16-5.12.16/Fitabase Data 4.12.16-5.12.16/sleepDay_merged.csv\")\nweight <- read.csv(\"/kaggle/input/fitbit/mturkfitbit_export_4.12.16-5.12.16/Fitabase Data 4.12.16-5.12.16/weightLogInfo_merged.csv\")","metadata":{"_uuid":"97024541-9fc7-4472-bf8d-ddd8bb395aa9","_cell_guid":"bbf18308-dc6f-4a1b-9b7f-da1cdc4d2449","execution":{"iopub.status.busy":"2024-03-04T08:30:30.020517Z","iopub.execute_input":"2024-03-04T08:30:30.060837Z","iopub.status.idle":"2024-03-04T08:30:30.168496Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"After importing the files, I will use the head() function to quickly view the summaries of the data.","metadata":{"_uuid":"d651b98a-923e-4675-a3b2-587ada7ba831","_cell_guid":"fa95d979-be16-4349-bb1e-e80f051b096b","trusted":true}},{"cell_type":"code","source":"head(dailyActivity)\nhead(dailyCalories)\nhead(dailyIntensities)\nhead(hourlyIntensities)\nhead(dailySteps)\nhead(daySleep)\nhead(weight)","metadata":{"_uuid":"cd8fcfbd-79f8-4a20-aa58-5f0182269875","_cell_guid":"23800e73-84eb-433a-954b-920e1c2808d4","execution":{"iopub.status.busy":"2024-03-04T08:30:30.171346Z","iopub.execute_input":"2024-03-04T08:30:30.172761Z","iopub.status.idle":"2024-03-04T08:30:30.308747Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"I will start off with the data cleaning process by checking for any duplicate or null values for each data frame. As you can see below, only daySleep contains the duplicate values, so I will extract the duplicate rows from daySleep and then remove them a new data frame called new_daySleep. No null values are found in any of the data frames.","metadata":{"_uuid":"480912d8-9c82-40ad-9801-e3146147f3e5","_cell_guid":"94625156-22b0-4801-b1a8-713880b1d143","trusted":true}},{"cell_type":"code","source":"# Identify the number of duplicate values or null values in each data frame \n\ncat(sprintf(\"Duplicate rows:  \n* dailyActivity: %i  \n* dailyCalories: %i  \n* dailyIntensities: %i\n* dailySteps: %i\n* daySleep: %i \\n\\n\", \n    sum(duplicated(dailyActivity)),\n    sum(duplicated(dailyCalories)),\n    sum(duplicated(dailyIntensities)),\n    sum(duplicated(dailySteps)),\n    sum(duplicated(daySleep))))\n\ncat(sprintf(\"Null rows:  \n* dailyActivity: %i  \n* dailyCalories: %i  \n* dailyIntensities: %i\n* dailySteps: %i\n* daySleep: %i\", \n    sum(is.na(dailyActivity)),\n    sum(is.na(dailyCalories)),\n    sum(is.na(dailyIntensities)),\n    sum(is.na(dailySteps)),\n    sum(is.na(daySleep))))","metadata":{"_uuid":"0c5bbba0-4477-4536-b7a2-5c24f162ea1e","_cell_guid":"019476f4-4934-4d00-877d-7533e3f6e7f0","execution":{"iopub.status.busy":"2024-03-04T08:30:30.311446Z","iopub.execute_input":"2024-03-04T08:30:30.313026Z","iopub.status.idle":"2024-03-04T08:30:30.347759Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Extract duplicate rows in daySleep\n\nduplicates <- daySleep[duplicated(daySleep),]\nprint(duplicates)","metadata":{"_uuid":"9c0926d6-43b0-43d2-b595-950f96ad16f4","_cell_guid":"bf624ab4-6105-4693-9691-d059ab40b010","execution":{"iopub.status.busy":"2024-03-04T08:30:30.350286Z","iopub.execute_input":"2024-03-04T08:30:30.351649Z","iopub.status.idle":"2024-03-04T08:30:30.390511Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Remove duplicate rows in daySleep under a new data frame \n\nclean_daySleep <- daySleep[!duplicated(daySleep),]","metadata":{"_uuid":"49a7a878-2b9d-4ee7-b82a-b20999399ea2","_cell_guid":"46430ac5-00bb-4531-8354-fc4f1d5149db","execution":{"iopub.status.busy":"2024-03-04T08:30:30.393276Z","iopub.execute_input":"2024-03-04T08:30:30.394636Z","iopub.status.idle":"2024-03-04T08:30:30.408434Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"If you look at the summary of the data frames, you can see that not all data frames have dates in the same format such as that the cleaned daySleep data frame has both the date and time displayed. You can also see that the columns containing the dates are in 'chr' type instead of the 'date' type.","metadata":{"_uuid":"61a69c16-68d7-4bcd-a695-6ba129325279","_cell_guid":"7a27dbf4-8a0d-46ad-9fd5-26b6887312c8","trusted":true}},{"cell_type":"code","source":"# Convert SleepDay class from chr to POSIXct\nclean_daySleep$SleepDay = as.POSIXct(clean_daySleep$SleepDay, format=\"%m/%d/%Y %I:%M:%S %p\")\n\n# Format the SleepDay column to date format under the new column named 'Date'\nclean_daySleep$Date <- format(clean_daySleep$SleepDay, format = \"%m/%d/%Y\")\n\n# Move Date column after Id column \ncleanv2_daySleep <- clean_daySleep %>% relocate(Date, .after='Id')\n\n# Delete SleepDay column\ncleanv2_daySleep$SleepDay <- NULL","metadata":{"_uuid":"03298c66-adf0-4b66-878c-5d328b497618","_cell_guid":"e8513340-a5d3-4903-a0ed-be91e57a3f68","execution":{"iopub.status.busy":"2024-03-04T08:30:30.411162Z","iopub.execute_input":"2024-03-04T08:30:30.412547Z","iopub.status.idle":"2024-03-04T08:30:30.472743Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Repeat the date/time format conversion for the weight dataset\nweight$Date = as.POSIXct(weight$Date, format=\"%m/%d/%Y %I:%M:%S %p\")\nweight$WeightDate <- format(weight$Date, format = \"%m/%d/%Y\")\nclean_weight <- weight %>% relocate(WeightDate, .after='Id')\nclean_weight$Date <- NULL","metadata":{"execution":{"iopub.status.busy":"2024-03-04T08:30:30.475326Z","iopub.execute_input":"2024-03-04T08:30:30.47672Z","iopub.status.idle":"2024-03-04T08:30:30.499763Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# convert the columns containing the dates of all datasets from <chr> class to <date> class\n\ndailyActivity$ActivityDate <- mdy(dailyActivity$ActivityDate)\ndailyCalories$ActivityDay <- mdy(dailyCalories$ActivityDay)\ndailyIntensities$ActivityDay <- mdy(dailyIntensities$ActivityDay)\ndailySteps$ActivityDay <- mdy(dailySteps$ActivityDay)\ncleanv2_daySleep$Date <- mdy(cleanv2_daySleep$Date)\nclean_weight$WeightDate <- mdy(clean_weight$WeightDate)","metadata":{"_uuid":"2b479012-69fa-457d-bda9-980b973f4acc","_cell_guid":"f0e168eb-ad3a-48cf-b6d1-d0770b7ccd2d","execution":{"iopub.status.busy":"2024-03-04T08:30:30.50236Z","iopub.execute_input":"2024-03-04T08:30:30.503795Z","iopub.status.idle":"2024-03-04T08:30:30.551984Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# convert the date and time in hourlyIntensities into the correct time and date format \n\nhourlyIntensities$ActivityHour=as.POSIXct(hourlyIntensities$ActivityHour, format=\"%m/%d/%Y %I:%M:%S %p\")\nhourlyIntensities$Time <- format(hourlyIntensities$ActivityHour, format = \"%H:%M:%S\")\nhourlyIntensities$Date <- format(hourlyIntensities$ActivityHour, format = \"%m/%d/%y\")","metadata":{"execution":{"iopub.status.busy":"2024-03-04T08:30:30.554586Z","iopub.execute_input":"2024-03-04T08:30:30.556003Z","iopub.status.idle":"2024-03-04T08:30:30.621607Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# rename 'ActivityDate' to 'Date' for each datset except the weight dataset\n\ndailyActivity <- dailyActivity %>% rename(Date = ActivityDate)\ndailyCalories <- dailyCalories %>% rename(Date = ActivityDay)\ndailyIntensities <- dailyIntensities %>% rename(Date = ActivityDay)\ndailySteps <- dailySteps %>% rename(Date = ActivityDay)","metadata":{"execution":{"iopub.status.busy":"2024-03-04T08:30:30.624155Z","iopub.execute_input":"2024-03-04T08:30:30.625521Z","iopub.status.idle":"2024-03-04T08:30:30.662111Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## **4. Analyze**\nAfter cleaning the data, they are now ready to be explored and analyzed. Since the data in the dailyCalories, dailyIntensities, and dailySteps datasets have already been merged in the dailyActivity dataset beforehand, I will analyze only the dailyActivity and the cleanv2_daySleep datasets. I will also merge the two datasets together by user ID numbers so that it will be easier to create the visualizations that will also determine the relationships between the two variables. ","metadata":{"_uuid":"91807605-a5c8-44c7-a224-11350d0359e1","_cell_guid":"471e8b31-87c0-4cb6-aeed-c65f23b5b8e6","trusted":true}},{"cell_type":"code","source":"cat(sprintf(\"Number of participants \n* Activity: %i\n* Calories: %i\n* Intensities: %i\n* Steps: %i\n* Sleep: %i\n* Weight: %i\",\n    n_distinct(dailyActivity$Id),\n    n_distinct(dailyCalories$Id),\n    n_distinct(dailyIntensities$Id),\n    n_distinct(dailySteps$Id),\n    n_distinct(cleanv2_daySleep$Id),\n    n_distinct(clean_weight$Id)))","metadata":{"execution":{"iopub.status.busy":"2024-03-04T08:30:30.66457Z","iopub.execute_input":"2024-03-04T08:30:30.665924Z","iopub.status.idle":"2024-03-04T08:30:30.680562Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"The code above shows the number of unique IDs (users) in each data set, which means there were 33 users total who submitted their personal tracker data, although the Sleep dataset only contains the data from 24 users. The weight dataset contains data from only 8 users, which would be too low for us to analyze the data and give any conclusions.","metadata":{"_uuid":"86968af9-90ae-48af-82f0-6425c7a4f075","_cell_guid":"4f0e4140-4f8e-49ef-88fb-e4f20cf66596","trusted":true}},{"cell_type":"markdown","source":"Below, I will get the summary statistics of the datasets. ","metadata":{}},{"cell_type":"code","source":"# get the summary statistics of the datasets\n\ndailyActivity %>% \n    select(TotalSteps, TotalDistance, Calories) %>%\n    summary()\n\ndailyIntensities %>% \n    select(SedentaryMinutes, LightlyActiveMinutes, FairlyActiveMinutes, VeryActiveMinutes, LightActiveDistance, ModeratelyActiveDistance, \n         VeryActiveDistance) %>% \n    summary()\n\nhourlyIntensities %>%\n    select(TotalIntensity, AverageIntensity) %>%\n    summary()\n\ncleanv2_daySleep %>%\n    select(TotalSleepRecords, TotalMinutesAsleep, TotalTimeInBed) %>%\n    summary()","metadata":{"execution":{"iopub.status.busy":"2024-03-04T08:30:30.683764Z","iopub.execute_input":"2024-03-04T08:30:30.685328Z","iopub.status.idle":"2024-03-04T08:30:30.755036Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"I will merge the daySleep and dailyActivity datasets to create the daily_Activity_Sleep dataset. ","metadata":{}},{"cell_type":"code","source":"# merge daySleep and dailyActivity datasets\ndaily_Activity_Sleep <- merge(dailyActivity, cleanv2_daySleep, by = c(\"Id\",\"Date\") )\n\nhead(daily_Activity_Sleep)","metadata":{"_uuid":"bccce50a-40c0-4bdd-ac00-4812b42704a7","_cell_guid":"8576131b-bf5b-4332-bda3-790c44d69b89","execution":{"iopub.status.busy":"2024-03-04T08:30:30.758805Z","iopub.execute_input":"2024-03-04T08:30:30.76027Z","iopub.status.idle":"2024-03-04T08:30:30.807795Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"I want to also see if I can analyze the data containing the total averages for the data by user ID, so I will create a dataset by taking the merged dataset (Activity_Sleep) and aggregating the columns.","metadata":{}},{"cell_type":"code","source":"avg_Activity_Sleep <- daily_Activity_Sleep %>% group_by(Id) %>% \n    summarize(avg_TotalSteps = mean(TotalSteps), \n    avg_TotalDistance = mean(TotalDistance), \n    avg_Calories = mean(Calories), \n    avg_VeryActiveDistance = mean(VeryActiveDistance),\n    avg_VeryActiveMinutes = mean(VeryActiveMinutes),\n    avg_SedentaryMinutes = mean(SedentaryMinutes),\n    avg_TotalMinutesInBed = mean(TotalTimeInBed), \n    avg_TotalMinutesAsleep = mean(TotalMinutesAsleep))\n\nhead(avg_Activity_Sleep)","metadata":{"execution":{"iopub.status.busy":"2024-03-04T08:30:30.811548Z","iopub.execute_input":"2024-03-04T08:30:30.813016Z","iopub.status.idle":"2024-03-04T08:30:30.875503Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## **5. Share**\nData visualizations will be created to determine the trends between various elements. It is also good to remind ourselves of the business task for this project so that we do not deviate from them. We only want to see the trends to determine how consumers use the FitBit smart devices to track their fitness activities.  ","metadata":{"_kg_hide-output":true}},{"cell_type":"code","source":"ggplot(data = avg_Activity_Sleep) + geom_point(mapping = aes(x = avg_TotalSteps, y = avg_Calories)) +\n    labs(x = \"Average Total Daily Steps\", y = \"Average Calories Burned\", title=\"Average Total Daily Steps vs. Average Calories Burned\")","metadata":{"execution":{"iopub.status.busy":"2024-03-04T08:30:30.878502Z","iopub.execute_input":"2024-03-04T08:30:30.879995Z","iopub.status.idle":"2024-03-04T08:30:31.399739Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"ggplot(data = avg_Activity_Sleep) + geom_point(mapping = aes(x = avg_VeryActiveMinutes, y = avg_Calories)) +\n    labs(x = \"Average of Very Active Minutes\", y = \"Average Calories Burned\", title = \"Average Very Active Minutes vs. Average Calories Burned\")","metadata":{"execution":{"iopub.status.busy":"2024-03-04T08:30:31.402407Z","iopub.execute_input":"2024-03-04T08:30:31.4039Z","iopub.status.idle":"2024-03-04T08:30:31.661889Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"After plotting the two graphs above using the total averages, I see that the plots are too scattered so I am unable to determine the correlations between the two variables in both graphs. The reason may be that the intensities vary for each user. Therefore, for any graphs related to activity, I will plot the variables from the Activity_Sleep data set that will show every data plotted instead of the average total by user ID from the avg_Activity_Sleep dataset. ","metadata":{}},{"cell_type":"code","source":"ggplot(data = daily_Activity_Sleep, mapping = aes(x = TotalSteps, y = Calories)) + geom_point() + geom_smooth() + \n    labs(x = \"Total Daily Steps\", y = \"Calories Burned\", title = \"Total Steps vs. Calories Burned\")","metadata":{"execution":{"iopub.status.busy":"2024-03-04T08:30:31.665073Z","iopub.execute_input":"2024-03-04T08:30:31.666664Z","iopub.status.idle":"2024-03-04T08:30:33.282592Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"You can see that there is a positive correlation between the total steps and the calories burned, meaning that the more active we are (the more steps we take), the more calories we burn. Because of that, I want to determine if intensities impact the correlation as well.","metadata":{}},{"cell_type":"markdown","source":"The data shows that there are some users with no recorded data for very active minutes, so I will create a dataset that will omit rows containing the value of zero for VeryActiveMinutes. ","metadata":{}},{"cell_type":"code","source":"# create dataset omitting data with '0' VeryActiveMinutes\n\nVeryActive_data <- subset(daily_Activity_Sleep, VeryActiveMinutes != 0)\n\nggplot(data = VeryActive_data, mapping = aes (x = VeryActiveMinutes, y = Calories)) + geom_point() + geom_smooth() +\n    labs(x = \"Very Active Minutes\", y = \"Calories Burned\", title = \"Very Active Minutes vs. Calories Burned\")","metadata":{"execution":{"iopub.status.busy":"2024-03-04T08:30:33.286904Z","iopub.execute_input":"2024-03-04T08:30:33.289041Z","iopub.status.idle":"2024-03-04T08:30:33.681435Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"This trend also shows a positive correlation between VeryActiveMinutes and Calories, showing that users who were the most active in longer periods of time burned the most calories. We can say that intensities influence the number of steps the users made to burn the calories.","metadata":{}},{"cell_type":"markdown","source":"Using the data from the Intensities dataset, I want to see frequency of the times when the users were the most active. Therefore, I will need to create a new dataset that groups the data by time (hourly) and then create a histogram for the time vs the average total intensities.","metadata":{}},{"cell_type":"code","source":"hourly_total_Int <- hourlyIntensities %>% \n  group_by(Time) %>%\n  drop_na() %>%\n  summarise(mean_total_Int = mean(TotalIntensity))\n\nggplot(data = hourly_total_Int, aes(x = Time, y = mean_total_Int)) + geom_histogram(stat = \"identity\", fill = 'darkblue') +\n    theme(axis.text.x = element_text(angle = 90)) + labs(x = \"Time\", y = \"Mean Total Intensities\", title = \"Average Total Intensity vs. Time\")","metadata":{"execution":{"iopub.status.busy":"2024-03-04T08:30:33.684364Z","iopub.execute_input":"2024-03-04T08:30:33.685969Z","iopub.status.idle":"2024-03-04T08:30:33.995245Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"In the histogram above, we can say that users were more active between 8 AM and 8 PM (20:00:00). The graph also shows peak times (when the users were most active) between 5 PM (17:00:00) and 7 PM (19:00:00).","metadata":{}},{"cell_type":"markdown","source":"Next, I want to determine the trend between the total time asleep and total time in bed.","metadata":{}},{"cell_type":"code","source":"ggplot(data = daily_Activity_Sleep, mapping = aes(x = TotalTimeInBed, y = TotalMinutesAsleep)) + geom_point() + geom_smooth()\n    labs(x = \"Total Time in Bed\", y = \"Total Minutes Asleep\", title = \"Total Time In Bed vs. Total Time Asleep\")","metadata":{"execution":{"iopub.status.busy":"2024-03-04T08:30:33.998099Z","iopub.execute_input":"2024-03-04T08:30:33.999562Z","iopub.status.idle":"2024-03-04T08:30:34.320544Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"As shown in the graph, it is obvious that the more time spent in bed, the more time spent asleep. Now, I want to see if there is a relationship between the time spent in sedentary position and the time spent asleep.","metadata":{}},{"cell_type":"code","source":"ggplot(data = daily_Activity_Sleep, mapping = aes(x = TotalMinutesAsleep, y = SedentaryMinutes)) + geom_point() + geom_smooth() +\n  labs(x = \"Total Minutes Asleep\", y = \"Sedentary Minutes\", title = \"Total Minutes Asleep vs. Sedentary Minutes\")","metadata":{"execution":{"iopub.status.busy":"2024-03-04T08:30:34.323811Z","iopub.execute_input":"2024-03-04T08:30:34.325186Z","iopub.status.idle":"2024-03-04T08:30:34.636322Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"There is a negative relationship between the time spent sedentary and the time asleep, which one can interpret that the more sedentary the user was, the less time they slept. However, because the data for sleep is very limited, we cannot conclude that the users slept less because they were more inactive when awake. ","metadata":{}},{"cell_type":"markdown","source":"## **6. Act**\n### Result\nAfter analyzing and visualizing the data, I gained some insights that would be helpful for Bellabeat to develop their marketing strategies. As mentioned earlier, we should keep in mind that the data was analyzed with limitations due to incomplete data, small sample size, and the likelihood that there were both men and women in the sample group. Below are recommendations on how Bellabeat can enhance their products to help consumers achieve their goals more effectively.\n","metadata":{}},{"cell_type":"markdown","source":"### Recommendations\n\n* Bellabeat can motivate their users to aim for 10,000 steps a day. The average American takes only 3,000-4,000 steps a day, which is considered low level of activity. The Centers for Disease Control and Prevention recommends walking 10,000 steps a day for optimal health. However, the Bellabeat app can adjust the recommended number of steps for users to take each day based on their ages and fitness levels.\n\n* The National Institute of Health strongly recommends that adults sleep between 7 and 9 hours each night. To ensure users get enough hours of sleep, Bellabeat can remind users via app notifications when their bedtime is near. Additionally, Bellabeat can set up a recommended sleep time depending on the users' schedules. \n\n* From the bar chart for Average Total Intensity vs. Time, most activities occur between 5 PM and 7 PM. We can assume that those are the typical times when people are finished with school and work and are spending their free time doing their physical activity. Bellabeat can remind users around those times to do their regular exercise.\n\n* If the user's goal is to burn calories and lose weight, Bellabeat can calculate how many calories they can aim to burn a day depending on the information the user provides (weight, fitness level, Body Mass Index, etc). They can also recommend different physical activities as well as recommend a personalized diet to control their caloric intake.\n\n* If the Bellabeat app detects the user is sedentary outside of bedtime hours for a long period of time, they can alert the user and recommend them to take a walk or do some quick exercise if necessary.","metadata":{}}]}